{"version":3,"sources":["../src/datasource.js"],"names":["_","TimelionDatasource","instanceSettings","$q","backendSrv","templateSrv","timeSrv","jsonData","esVersion","type","url","name","q","options","headers","datasourceRequest","query","buildQueryParameters","oThis","targets","length","when","data","reqs","map","queries","request","method","then","readTimlionSeries","response","list","ix","label","d","all","flatten","series","sheet","testQuery","status","message","title","body","replace","annotation","annotationQuery","range","datasource","enable","iconColor","rangeRaw","result","interpolated","target","timeRange","scopedVars","text","i","value","isObject","filter","hide","queryTpl","from","format","to","expandTemplate","Object","keys","key","trim","scale_interval","exec","interval","undefined","variables","t","indexOf","join","intervalGroups","groupBy","intervals","time","cloneDeep"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;oCAEMC,kB;AAEX,oCAAYC,gBAAZ,EAA8BC,EAA9B,EAAkCC,UAAlC,EAA8CC,WAA9C,EAA2DC,OAA3D,EAAoE;AAAA;;AAClEJ,2BAAiBK,QAAjB,GAA4BL,iBAAiBK,QAAjB,IAA6B,EAAzD;AACA,eAAKL,gBAAL,GAAwBA,gBAAxB;AACA,eAAKM,SAAL,GAAiBN,iBAAiBK,QAAjB,CAA0BC,SAA1B,IAAuC,OAAxD;AACA,eAAKC,IAAL,GAAYP,iBAAiBO,IAA7B;AACA,eAAKC,GAAL,GAAWR,iBAAiBQ,GAA5B;AACA,eAAKC,IAAL,GAAYT,iBAAiBS,IAA7B;AACA,eAAKC,CAAL,GAAST,EAAT;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKC,WAAL,GAAmBA,WAAnB;AACA,eAAKC,OAAL,GAAeA,OAAf;AACD;;;;kCAEOO,O,EAAS;AACfA,oBAAQC,OAAR,GAAkB;AAChB,6BAAe,KAAKN,SADJ;AAEhB,8BAAgB;AAFA,aAAlB;AAIA,mBAAO,KAAKJ,UAAL,CAAgBW,iBAAhB,CAAkCF,OAAlC,CAAP;AACD;;;gCAEKA,O,EAAS;AAAA;;AACb,gBAAIG,QAAQ,KAAKC,oBAAL,CAA0BJ,OAA1B,CAAZ;AACA,gBAAIK,QAAQ,IAAZ;AACA,gBAAIF,MAAMG,OAAN,CAAcC,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,qBAAO,KAAKR,CAAL,CAAOS,IAAP,CAAY,EAAEC,MAAM,EAAR,EAAZ,CAAP;AACD;AACD,gBAAIC,OAAOvB,EAAEwB,GAAF,CAAMX,QAAQY,OAAd,EACT;AAAA,qBAASP,MAAMQ,OAAN,CAAc;AACrBhB,qBAAK,MAAKA,GAAL,GAAW,MADK;AAErBY,sBAAMN,KAFe;AAGrBW,wBAAQ;AAHa,eAAd,EAKNC,IALM,CAKD;AAAA,uBAAYV,MAAMW,iBAAN,CAAwBC,QAAxB,EACfN,GADe,CACX,UAACO,IAAD,EAAOC,EAAP;AAAA,yBAAe;AAClB,8BAAUD,KAAKE,KADG;AAElB,kCAAcjC,EAAEwB,GAAF,CAAMO,KAAKT,IAAX,EAAiB;AAAA,6BAAK,CAACY,EAAE,CAAF,CAAD,EAAOA,EAAE,CAAF,CAAP,CAAL;AAAA,qBAAjB;AAFI,mBAAf;AAAA,iBADW,CAAZ;AAAA,eALC,CAAT;AAAA,aADS,CAAX;AAWA,mBAAO,KAAKtB,CAAL,CAAOuB,GAAP,CAAWZ,IAAX,EAAiBK,IAAjB,CAAsB;AAAA,qBAAW,EAAE,QAAQ5B,EAAEoC,OAAF,CAAUC,MAAV,CAAV,EAAX;AAAA,aAAtB,CAAP;AACD;;;4CAEiBP,Q,EAAU;AAC1B,mBAAO9B,EAAEoC,OAAF,CAAUpC,EAAEwB,GAAF,CAAMM,SAASR,IAAT,CAAcgB,KAApB,EAA2B;AAAA,qBAASA,MAAMP,IAAf;AAAA,aAA3B,CAAV,CAAP;AACD;;;2CAEgB;AACf,gBAAIQ,YAAY;AACJ,uBAAQ,CAAC,QAAD,CADJ;AAEJ,sBAAO;AACL,wBAAO,QADF;AAEL,sBAAK,KAFA;AAGL,wBAAO,OAHF;AAIL,4BAAW,MAJN;AAKL,4BAAW;AALN;AAFH,aAAhB;AAUA,mBAAO,KAAKb,OAAL,CAAa;AAClBhB,mBAAK,KAAKA,GAAL,GAAW,MADE;AAElBiB,sBAAQ,MAFU;AAGlBL,oBAAKiB;AAHa,aAAb,EAIJX,IAJI,CAIC,oBAAY;AAClB,kBAAIE,SAASU,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAO,EAAEA,QAAQ,SAAV,EAAqBC,SAAS,wBAA9B,EAAwDC,OAAO,SAA/D,EAAP;AACD,eAFD,MAEK;AACH,uBAAO,EAAEF,QAAQ,OAAV,EAAmBC,SAASX,SAASa,IAArC,EAA2CD,kBAAgBZ,SAASU,MAApE,EAAP;AACD;AACF,aAVM,CAAP;AAWD;;;0CAEe3B,O,EAAS;AACvB,gBAAIG,QAAQ,KAAKX,WAAL,CAAiBuC,OAAjB,CAAyB/B,QAAQgC,UAAR,CAAmB7B,KAA5C,EAAmD,EAAnD,EAAuD,MAAvD,CAAZ;AACA,gBAAI8B,kBAAkB;AACpBC,qBAAOlC,QAAQkC,KADK;AAEpBF,0BAAY;AACVlC,sBAAME,QAAQgC,UAAR,CAAmBlC,IADf;AAEVqC,4BAAYnC,QAAQgC,UAAR,CAAmBG,UAFrB;AAGVC,wBAAQpC,QAAQgC,UAAR,CAAmBI,MAHjB;AAIVC,2BAAWrC,QAAQgC,UAAR,CAAmBK,SAJpB;AAKVlC,uBAAOA;AALG,eAFQ;AASpBmC,wBAAUtC,QAAQsC;AATE,aAAtB;;AAYA,mBAAO,KAAK/C,UAAL,CAAgBW,iBAAhB,CAAkC;AACvCL,mBAAK,KAAKA,GAAL,GAAW,cADuB;AAEvCiB,sBAAQ,MAF+B;AAGvCL,oBAAMwB;AAHiC,aAAlC,EAIJlB,IAJI,CAIC,kBAAU;AAChB,qBAAOwB,OAAO9B,IAAd;AACD,aANM,CAAP;AAOD;;;0CAEeN,K,EAAO;AACrB,gBAAIqC,eAAe;AACjBC,sBAAQ,KAAKjD,WAAL,CAAiBuC,OAAjB,CAAyB5B,KAAzB,EAAgC,IAAhC,EAAsC,OAAtC;AADS,aAAnB;AAGA,mBAAO,KAAK,OAAL,EAAc;AACjBG,uBAAQ,CAACkC,YAAD,CADS;AAEjBN,qBAAM,KAAKzC,OAAL,CAAaiD,SAAb,EAFW;AAGjBC,0BAAW,EAHM,EAAd,EAIF5B,IAJE,CAIG,kBAAU;AACd,qBAAO5B,EAAEwB,GAAF,CAAMa,OAAOf,IAAb,EAAmB;AAAA,uBAAM,EAACmC,MAAKvB,EAAEoB,MAAR,EAAN;AAAA,eAAnB,CAAP;AACD,aANE,CAAP;AAOD;;;yCAEcF,M,EAAQ;AACrB,mBAAOpD,EAAEwB,GAAF,CAAM4B,OAAO9B,IAAb,EAAmB,UAACY,CAAD,EAAIwB,CAAJ,EAAU;AAClC,kBAAIxB,KAAKA,EAAEuB,IAAP,IAAevB,EAAEyB,KAArB,EAA4B;AAC1B,uBAAO,EAAEF,MAAMvB,EAAEuB,IAAV,EAAgBE,OAAOzB,EAAEyB,KAAzB,EAAP;AACD,eAFD,MAEO,IAAI3D,EAAE4D,QAAF,CAAW1B,CAAX,CAAJ,EAAmB;AACxB,uBAAO,EAAEuB,MAAMvB,CAAR,EAAWyB,OAAOD,CAAlB,EAAP;AACD;AACD,qBAAO,EAAED,MAAMvB,CAAR,EAAWyB,OAAOzB,CAAlB,EAAP;AACD,aAPM,CAAP;AAQD;;;+CAEoBrB,O,EAAS;AAC5B,gBAAIK,QAAQ,IAAZ;AACA;AACAL,oBAAQM,OAAR,GAAkBnB,EAAE6D,MAAF,CAAShD,QAAQM,OAAjB,EAA0B,kBAAU;AACpD,qBAAOmC,OAAOA,MAAP,KAAkB,eAAlB,IAAqC,CAACA,OAAOQ,IAApD;AACD,aAFiB,CAAlB;;AAIA,gBAAMC,WAAW;AACf,uBAAS,IADM;AAEf,sBAAQ;AACN,wBAAQlD,QAAQkC,KAAR,CAAciB,IAAd,CAAmBC,MAAnB,CAA0B,wBAA1B,CADF;AAEN,4BAAY,MAFN;AAGN,wBAAQ,UAHF;AAIN,4BAAY,KAJN;AAKN,sBAAMpD,QAAQkC,KAAR,CAAcmB,EAAd,CAAiBD,MAAjB,CAAwB,wBAAxB;AALA;AAFO,aAAjB;AAUA,gBAAIE,iBAAiB,SAAjBA,cAAiB,CAASb,MAAT,EAAgB;AACnCtD,gBAAEwB,GAAF,CAAM4C,OAAOC,IAAP,CAAYxD,QAAQ2C,UAApB,CAAN,EAAuC;AAAA,uBAC1BF,SAASA,OAAOV,OAAP,CAAe,MAAI0B,GAAnB,EAAwBzD,QAAQ2C,UAAR,CAAmBc,GAAnB,EAAwBX,KAAhD,CADiB;AAAA,eAAvC;AAEA,qBAAOzC,MAAMb,WAAN,CACAuC,OADA,CACQU,MADR,EACgB,IADhB,EAEAV,OAFA,CAEQ,cAFR,EAEwB,EAFxB,EAGA2B,IAHA,EAAP;AAID,aAPD;AAQA,gBAAIpD,UAAUnB,EAAEwB,GAAF,CAAMX,QAAQM,OAAd,EAAuB,kBAAU;AAC7C,kBAAImC,SAASa,eAAeb,OAAOA,MAAtB,CAAb;AACA,kBAAIkB,iBAAiB,8BAA8BC,IAA9B,CAAmCnB,MAAnC,CAArB;AACA,kBAAIoB,WAAWpB,OAAOoB,QAAP,IAAmBC,SAAlC;AACA,kBAAIH,cAAJ,EAAoB;AAClBE,2BAAWF,eAAe,CAAf,CAAX;AACAlB,yBAASA,OAAOV,OAAP,CAAe4B,eAAe,CAAf,CAAf,EAAkC,EAAlC,CAAT;AACD;AACD,qBAAO,EAAElB,QAAQA,MAAV,EAAkBoB,UAAUA,QAA5B,EAAP;AACD,aATa,CAAd;AAUA,gBAAIE,YAAY5E,EAAE6D,MAAF,CAAS7D,EAAEwB,GAAF,CAAMX,QAAQM,OAAd,EAAuB;AAAA,qBAAKgD,eAAeU,EAAEvB,MAAjB,CAAL;AAAA,aAAvB,CAAT,EACc;AAAA,qBAAKuB,EAAEC,OAAF,CAAU,GAAV,KAAkB,CAAvB;AAAA,aADd,EAEGC,IAFH,CAEQ,GAFR,CAAhB;AAGA,gBAAIC,iBAAiBhF,EAAEiF,OAAF,CAAU9D,OAAV,EAAmB;AAAA,qBAAK0D,EAAEH,QAAP;AAAA,aAAnB,CAArB;AACA,gBAAIQ,YAAYd,OAAOC,IAAP,CAAYW,cAAZ,CAAhB;AACA,gBAAIvD,UAAUzB,EAAEwB,GAAF,CAAM0D,SAAN,EAAiB;AAAA,qBAAQ;AACrCR,0BAAUJ,GAD2B;AAErChC,uBAAOtC,EAAEwB,GAAF,CAAMwD,eAAeV,GAAf,CAAN,EAA2B;AAAA,yBAAWM,aAAaA,UAAUxD,MAAxB,GACU,CAACwD,SAAD,EAAYtB,OAAOA,MAAnB,EAA2ByB,IAA3B,CAAgC,GAAhC,CADV,GAEUzB,OAAOA,MAF3B;AAAA,iBAA3B;AAF8B,eAAR;AAAA,aAAjB,CAAd;AAMAzC,oBAAQY,OAAR,GAAkBzB,EAAEwB,GAAF,CAAMC,OAAN,EAAe,aAAK;AACpCsC,uBAASzB,KAAT,GAAiB1B,EAAE0B,KAAnB;AACAyB,uBAASoB,IAAT,CAAcT,QAAd,GAAyB,CAAC9D,EAAE8D,QAAH,IAAe9D,EAAE8D,QAAF,KAAe,WAA9B,GAA4C,MAA5C,GAAqD9D,EAAE8D,QAAhF;AACA,qBAAO1E,EAAEoF,SAAF,CAAYrB,QAAZ,CAAP;AACD,aAJiB,CAAlB;AAKA,mBAAOlD,OAAP;AACD","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\r\n\r\nexport class TimelionDatasource {\r\n\r\n  constructor(instanceSettings, $q, backendSrv, templateSrv, timeSrv) {\r\n    instanceSettings.jsonData = instanceSettings.jsonData || {};\r\n    this.instanceSettings = instanceSettings;\r\n    this.esVersion = instanceSettings.jsonData.esVersion || \"5.3.0\";\r\n    this.type = instanceSettings.type;\r\n    this.url = instanceSettings.url;\r\n    this.name = instanceSettings.name;\r\n    this.q = $q;\r\n    this.backendSrv = backendSrv;\r\n    this.templateSrv = templateSrv;\r\n    this.timeSrv = timeSrv;\r\n  }\r\n\r\n  request(options) {\r\n    options.headers = {\r\n      \"kbn-version\": this.esVersion,\r\n      \"Content-Type\": \"application/json;charset=UTF-8\"\r\n    };\r\n    return this.backendSrv.datasourceRequest(options);\r\n  }\r\n\r\n  query(options) {\r\n    var query = this.buildQueryParameters(options);\r\n    var oThis = this;\r\n    if (query.targets.length <= 0) {\r\n      return this.q.when({ data: [] });\r\n    }\r\n    var reqs = _.map(options.queries,\r\n      query => oThis.request({\r\n        url: this.url + '/run',\r\n        data: query,\r\n        method: 'POST'\r\n      })\r\n        .then(response => oThis.readTimlionSeries(response)\r\n          .map((list, ix) => ({\r\n            \"target\": list.label,\r\n            \"datapoints\": _.map(list.data, d => [d[1], d[0]])\r\n          }))));\r\n    return this.q.all(reqs).then(series => ({ \"data\": _.flatten(series) }))\r\n  }\r\n\r\n  readTimlionSeries(response) {\r\n    return _.flatten(_.map(response.data.sheet, sheet => sheet.list));\r\n  }\r\n\r\n  testDatasource() {\r\n    var testQuery = {\r\n                \"sheet\":[\".es(*)\"],\r\n                \"time\":{\r\n                  \"from\":\"now-1m\",\r\n                  \"to\":\"now\",\r\n                  \"mode\":\"quick\",\r\n                  \"interval\":\"auto\",\r\n                  \"timezone\":\"Europe/Berlin\"\r\n                  }\r\n                };\r\n    return this.request({\r\n      url: this.url + '/run',\r\n      method: 'POST',\r\n      data:testQuery\r\n    }).then(response => {\r\n      if (response.status === 200) {\r\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\r\n      }else{\r\n        return { status: \"error\", message: response.body, title: `Error ${response.status}` };\r\n      }\r\n    });\r\n  }\r\n\r\n  annotationQuery(options) {\r\n    var query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\r\n    var annotationQuery = {\r\n      range: options.range,\r\n      annotation: {\r\n        name: options.annotation.name,\r\n        datasource: options.annotation.datasource,\r\n        enable: options.annotation.enable,\r\n        iconColor: options.annotation.iconColor,\r\n        query: query\r\n      },\r\n      rangeRaw: options.rangeRaw\r\n    };\r\n\r\n    return this.backendSrv.datasourceRequest({\r\n      url: this.url + '/annotations',\r\n      method: 'POST',\r\n      data: annotationQuery\r\n    }).then(result => {\r\n      return result.data;\r\n    });\r\n  }\r\n\r\n  metricFindQuery(query) {\r\n    var interpolated = {\r\n      target: this.templateSrv.replace(query, null, 'regex')\r\n    };\r\n    return this[\"query\"]({\r\n        targets:[interpolated],\r\n        range:this.timeSrv.timeRange(),\r\n        scopedVars:{}})\r\n        .then(series => {\r\n          return _.map(series.data, d => ({text:d.target}));\r\n        });\r\n  }\r\n\r\n  mapToTextValue(result) {\r\n    return _.map(result.data, (d, i) => {\r\n      if (d && d.text && d.value) {\r\n        return { text: d.text, value: d.value };\r\n      } else if (_.isObject(d)) {\r\n        return { text: d, value: i };\r\n      }\r\n      return { text: d, value: d };\r\n    });\r\n  }\r\n\r\n  buildQueryParameters(options) {\r\n    var oThis = this;\r\n    //remove placeholder targets\r\n    options.targets = _.filter(options.targets, target => {\r\n      return target.target !== 'select metric' && !target.hide;\r\n    });\r\n\r\n    const queryTpl = {\r\n      \"sheet\": null,\r\n      \"time\": {\r\n        \"from\": options.range.from.format(\"YYYY-MM-DDTHH:mm:ss ZZ\"),\r\n        \"interval\": \"auto\",\r\n        \"mode\": \"absolute\",\r\n        \"timezone\": \"GMT\",\r\n        \"to\": options.range.to.format(\"YYYY-MM-DDTHH:mm:ss ZZ\")\r\n      }\r\n    };\r\n    var expandTemplate = function(target){\r\n      _.map(Object.keys(options.scopedVars), key =>\r\n                   target = target.replace(\"$\"+key, options.scopedVars[key].value));\r\n      return oThis.templateSrv\r\n            .replace(target, true)\r\n            .replace(/\\r\\n|\\r|\\n/mg, \"\")\r\n            .trim();\r\n    };\r\n    var targets = _.map(options.targets, target => {\r\n      var target = expandTemplate(target.target);\r\n      var scale_interval = /.scale_interval\\(([^\\)]*)\\)/.exec(target);\r\n      var interval = target.interval || undefined;\r\n      if (scale_interval) {\r\n        interval = scale_interval[1];\r\n        target = target.replace(scale_interval[0], \"\");\r\n      }\r\n      return { target: target, interval: interval };\r\n    });\r\n    var variables = _.filter(_.map(options.targets, t => expandTemplate(t.target)),\r\n                                  t => t.indexOf(\"$\") == 0)\r\n                      .join(\",\");\r\n    var intervalGroups = _.groupBy(targets, t => t.interval);\r\n    var intervals = Object.keys(intervalGroups);\r\n    var queries = _.map(intervals, key => ({\r\n      interval: key,\r\n      sheet: _.map(intervalGroups[key], target => (variables && variables.length) ?\r\n                                                            [variables, target.target].join(\",\"):\r\n                                                            target.target)\r\n    }));\r\n    options.queries = _.map(queries, q => {\r\n      queryTpl.sheet = q.sheet;\r\n      queryTpl.time.interval = !q.interval || q.interval === 'undefined' ? 'auto' : q.interval;\r\n      return _.cloneDeep(queryTpl);\r\n    });\r\n    return options;\r\n  }\r\n}\r\n"]}